(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[7397],{33254:(e,n,t)=>{"use strict";t.d(n,{O:()=>s});let s=[{name:"docs",route:"/docs",children:[{data:{index:"Introduction","how-it-works":"How does it work?",release:"When will it be released?"}},{name:"how-it-works",route:"/docs/how-it-works",frontMatter:{title:"How does it work?"}},{name:"index",route:"/docs",frontMatter:{title:"Introduction"}},{name:"release",route:"/docs/release",frontMatter:{title:"When will it be released?"}}]}]},85416:(e,n,t)=>{(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs/how-it-works",function(){return t(98736)}])},98736:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>c,useTOC:()=>d});var s=t(37876),a=t(71807),r=t(33254),i=t(89707),o=t(14232);function l({chart:e}){let n=(0,o.useId)(),[a,r]=(0,o.useState)(""),i=(0,o.useRef)(null),l=function(e){let[n,t]=(0,o.useState)(!1);return(0,o.useEffect)(()=>{let n=new IntersectionObserver(([e])=>{e.isIntersecting&&(n.disconnect(),t(!0))});return n.observe(e.current),()=>{n.disconnect()}},[e]),n}(i);return(0,o.useEffect)(()=>{if(!l)return;let s=document.documentElement,a=new MutationObserver(o);return a.observe(s,{attributes:!0}),o(),()=>{a.disconnect()};async function o(){let a=s.classList.contains("dark")||s.attributes.getNamedItem("data-theme")?.value==="dark",{default:o}=await Promise.all([t.e(7290),t.e(8468)]).then(t.bind(t,48468));try{o.initialize({startOnLoad:!1,securityLevel:"loose",fontFamily:"inherit",themeCSS:"margin: 1.5rem auto 0;",theme:a?"dark":"default"});let{svg:t}=await o.render(n.replaceAll(":",""),e.replaceAll("\\n","\n"),i.current);r(t)}catch(e){console.error("Error while rendering mermaid",e)}}},[e,l]),(0,s.jsx)("div",{ref:i,dangerouslySetInnerHTML:{__html:a}})}function d(e){return[{value:"Details",id:"details",depth:2},{value:"1. AST parsing",id:"1-ast-parsing",depth:4},{value:"2. Source and Sink Analysis",id:"2-source-and-sink-analysis",depth:4},{value:"3. Cross-Repo Analysis",id:"3-cross-repo-analysis",depth:4},{value:"4. Results",id:"4-results",depth:4}]}let c=(0,a.e)(function(e){let{toc:n=d(e)}=e,t={h1:"h1",h2:"h2",h4:"h4",li:"li",p:"p",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h1,{children:"How does it work?"}),"\n",(0,s.jsx)(t.p,{children:"MaiMap connects to your Git organization and imports your code for analysis. Once your codebases have been analyzed the resulting contextual map is stored in a graph database. This data can be accessed via a web interface and visualized in an interactive graph. An MCP server can be installed locally, to serve as a gateway between your local LLM and MaiMap’s API."}),"\n",(0,s.jsx)(l,{chart:'---\\nconfig:\\n  layout: dagre\\n---\\nflowchart LR\\n    subgraph system ["MaiMap"]\\n        n1@{ label: "<img src=\\"https://raw.githubusercontent.com/evanrolfe/trayce_gui/refs/heads/main/fonts/logo.svg\\" style=\\"width:20px;height:20px\\"> Analyzer" }\\n        B[("Graph<br>Database")]\\n        A["API"]\\n    end\\n    GIT["Git"]\\n    n1 --\x3e B\\n    GIT --\x3e n1\\n    F["Web Interface"]\\n    subgraph external ["User\'s Local Machine"]\\n        D@{ label: "MCP Server" }\\n        G["fa:fa-table LLM"]\\n    end\\n    B --\x3e A\\n    A --\x3e D\\n    A --\x3e F\\n    D --\x3e G\\n    D@{ shape: rect}\\n    style system fill:transparent,stroke-dasharray: 5 5,stroke-width:2px\\n    style external fill:transparent,stroke-dasharray: 5 5,stroke-width:2px\\n    style B stroke-width:1px'}),"\n",(0,s.jsx)(t.h2,{id:n[0].id,children:n[0].value}),"\n",(0,s.jsx)(t.h4,{id:n[1].id,children:n[1].value}),"\n",(0,s.jsx)(t.p,{children:"For each repo, the code is parsed into an abstract syntax tree (AST). The AST is then saved to a graph database. This allows MaiMap to quickly return call paths and data flows for the operations that your services perform."}),"\n",(0,s.jsx)(t.h4,{id:n[2].id,children:n[2].value}),"\n",(0,s.jsx)(t.p,{children:"Rule-based analysis is applied to the AST to identify sources and sinks in your codebase. These rules are language-specific which is why MaiMap only works for a certain set of languages."}),"\n",(0,s.jsx)(t.p,{children:"LLM-based analysis is done by MaiMap’s own internal LLM. It does further classification of AST nodes, so it can pick up where rule-based analysis may have failed to identify behaviors and patterns."}),"\n",(0,s.jsx)(t.p,{children:"Nodes are labelled based on any sources or sinks they are identified as belonging to. Multiple nodes can have the same label."}),"\n",(0,s.jsx)(t.p,{children:"Examples of sources and sinks that can be identified are:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"HTTP endpoints & requests"}),"\n",(0,s.jsx)(t.li,{children:"gRPC methods & calls"}),"\n",(0,s.jsx)(t.li,{children:"Kafka, PubSub, EventBus, RabbitMQ consumers & publishers"}),"\n",(0,s.jsx)(t.li,{children:"Reading & writing to SQL databases"}),"\n",(0,s.jsx)(t.li,{children:"Reading & writing to NoSQL databases"}),"\n"]}),"\n",(0,s.jsx)(t.h4,{id:n[3].id,children:n[3].value}),"\n",(0,s.jsx)(t.p,{children:"For each repo, its sinks are compared with the sources of every other repo. If a match is identified then a connection from that service to the other is saved in the graph database. This allows us to build up a graph of connections between services."}),"\n",(0,s.jsx)(t.h4,{id:n[4].id,children:n[4].value}),"\n",(0,s.jsx)(t.p,{children:"The results of these analyses are returned in two ways:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"A web interface gives the user access to view the analyzed data. Including a visual graph of the services and their connections."}),"\n",(0,s.jsx)(t.li,{children:"An MCP server is used to connect your LLM to our API, which gives the LLM access to their organization’s graph."}),"\n"]})]})},"/docs/how-it-works",{filePath:"pages/docs/how-it-works.mdx",timestamp:1759842706e3,pageMap:r.O,frontMatter:{title:"How does it work?"},title:"How does it work?"},"undefined"==typeof RemoteContent?d:RemoteContent.useTOC)}},e=>{var n=n=>e(e.s=n);e.O(0,[1807,636,6593,8792],()=>n(85416)),_N_E=e.O()}]);